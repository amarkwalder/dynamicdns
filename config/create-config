#!/bin/bash

usage() {
    echo "Usage: create-config [OPTION]"
    echo "Create configuration files for Dynamic DNS Utility"
    echo ""
    echo "--silent"
    echo "--stage <stage>"
    echo "--hostname <hostname>"
    echo "--shared-secret <shared secret>"
    echo "--api-domain-name <API domain name>"
    echo "--api-domain-certificate-name <API domain certificate name>"
    echo "--route53-region <Route53 - Region>"
    echo "--route53-zone-id <Route53 - Zone ID>"
    echo "--route53-record-ttl <Route53 - Record TTL>"
    echo "--route53-record-type <Route53 - Record Type>"
    echo "--s3-region <S3 - Region>"
    echo "--s3-bucket <S3 - Bucket>"
    echo "--s3-key <S3 - Key>" 
    echo ""   
    exit
}

replace-tokens() {
    FILE=$1
    replace "@@URL@@" "$URL" $FILE
    replace "@@DNS_HOSTNAME@@" "$DNS_HOSTNAME" $FILE
    replace "@@SHARED_SECRET@@" "$SHARED_SECRET" $FILE
    replace "@@API_DOMAIN_NAME@@" "$API_DOMAIN_NAME" $FILE
    replace "@@API_DOMAIN_CERTIFICATE_NAME@@" "$API_DOMAIN_CERTIFICATE_NAME" $FILE
    replace "@@ROUTE53_REGION@@" "$ROUTE53_REGION" $FILE
    replace "@@ROUTE53_ZONE_ID@@" "$ROUTE53_ZONE_ID" $FILE
    replace "@@ROUTE53_RECORD_TTL@@" "$ROUTE53_RECORD_TTL" $FILE
    replace "@@ROUTE53_RECORD_TYPE@@" "$ROUTE53_RECORD_TYPE" $FILE
    replace "@@S3_REGION@@" "$S3_REGION" $FILE
    replace "@@S3_BUCKET@@" "$S3_BUCKET" $FILE
    replace "@@S3_KEY@@" "$S3_KEY" $FILE
} 

function replace {
  sed -i "s/$(echo $1 | sed -e 's/\([[\/.*]\|\]\)/\\&/g')/$(echo $2 | sed -e 's/[\/&]/\\&/g')/g" $3
}

type read   >/dev/null 2>&1 || { echo >&2 "I require 'read' but it's not installed. Aborting."; exit 1; }
type sed    >/dev/null 2>&1 || { echo >&2 "I require 'sed' but it's not installed. Aborting."; exit 1; }

SILENT=no
while [ "$1" != "" ]; do
    case $1 in
        --silent )                      shift
                                        SILENT=yes
                                        ;;
        --stage )                       shift
                                        STAGE=$1
                                        ;;
        --hostname )                    shift
                                        DNS_HOSTNAME=$1
                                        ;;
        --shared-secret )               shift
                                        SHARED_SECRET=$1
                                        ;;
        --api-domain-name )             shift
                                        API_DOMAIN_NAME=$1
                                        ;;
        --api-domain-certificate-name ) shift
                                        API_DOMAIN_CERTIFICATE_NAME=$1
                                        ;;
        --route53-region )              shift
                                        ROUTE53_REGION=$1
                                        ;;
        --route53-zone-id )             shift
                                        ROUTE53_ZONE_ID=$1
                                        ;;
        --route53-record-ttl )          shift
                                        ROUTE53_RECORD_TTL=$1
                                        ;;
        --route53-record-type )         shift
                                        ROUTE53_RECORD_TYPE=$1
                                        ;;
        --s3-region )                   shift
                                        S3_REGION=$1
                                        ;;
        --s3-bucket )                   shift
                                        S3_BUCKET=$1
                                        ;;
        --s3-key )                      shift
                                        S3_KEY=$1
                                        ;;
        -h | --help )                   usage
                                        ;;
        * )                             usage
                                        ;;
    esac
    shift
done

if [ "$SILENT" == "no" ]; then
    read -p "Stage                          : " STAGE
    read -p "Hostname                       : " DNS_HOSTNAME
    read -p "Shared Secret                  : " SHARED_SECRET
    read -p "API Domain - Name              : " API_DOMAIN_NAME
    read -p "API Domain - Certificate Name  : " API_DOMAIN_CERTIFICATE_NAME
    read -p "Route53 - Region               : " ROUTE53_REGION
    read -p "Route53 - Zone ID              : " ROUTE53_ZONE_ID
    read -p "Route53 - Record TTL           : " ROUTE53_RECORD_TTL
    read -p "Route53 - Record Type          : " ROUTE53_RECORD_TYPE
    read -p "S3 - Region                    : " S3_REGION
    read -p "S3 - Bucket                    : " S3_BUCKET
    read -p "S3 - Key                       : " S3_KEY
fi

[ -z $STAGE ] && usage
[ -z $DNS_HOSTNAME ] && usage
[ -z $SHARED_SECRET ] && usage
[ -z $API_DOMAIN_NAME ] && usage
[ -z $API_DOMAIN_CERTIFICATE_NAME ] && usage
[ -z $ROUTE53_REGION ] && usage
[ -z $ROUTE53_ZONE_ID ] && usage
[ -z $ROUTE53_RECORD_TTL ] && usage
[ -z $ROUTE53_RECORD_TYPE ] && usage
[ -z $S3_REGION ] && usage
[ -z $S3_BUCKET ] && usage
[ -z $S3_KEY ] && usage

URL=https://$API_DOMAIN_NAME

BASEDIR=$(dirname "$0")

cp $BASEDIR/server.config.template $BASEDIR/server-$STAGE.config
replace-tokens $BASEDIR/server-$STAGE.config

cp $BASEDIR/serverless.config.yml.template $BASEDIR/serverless-$STAGE.config.yml
replace-tokens $BASEDIR/serverless-$STAGE.config

cp $BASEDIR/client.config.template $BASEDIR/client-$STAGE.config
replace-tokens $BASEDIR/client-$STAGE.config

echo ""
echo "Successfully created config files"
echo "- $BASEDIR/server-$STAGE.config"
echo "- $BASEDIR/serverless-$STAGE.config"
echo "- $BASEDIR/client-$STAGE.config"
echo ""
exit 0